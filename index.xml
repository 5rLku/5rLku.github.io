<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>5rLku</title>
        <link>https://5rLku.github.io/</link>
        <description>Recent content on 5rLku</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 15 Feb 2023 11:24:41 +0800</lastBuildDate><atom:link href="https://5rLku.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>GAMES101_Lecture02</title>
        <link>https://5rLku.github.io/article/games101_lecture02/</link>
        <pubDate>Wed, 15 Feb 2023 11:24:41 +0800</pubDate>
        
        <guid>https://5rLku.github.io/article/games101_lecture02/</guid>
        <description></description>
        </item>
        <item>
        <title>GAMES101_Lecture01</title>
        <link>https://5rLku.github.io/article/games101_lecture01/</link>
        <pubDate>Mon, 05 Sep 2022 21:41:48 +0800</pubDate>
        
        <guid>https://5rLku.github.io/article/games101_lecture01/</guid>
        <description>&lt;h2 id=&#34;什么是图形学&#34;&gt;什么是图形学&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;用计算机来合成和操作视觉信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;为什么学习图形学&#34;&gt;为什么学习图形学&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全局光照的效果是一款游戏画面好坏的不错的技术判断标准&lt;/li&gt;
&lt;li&gt;“The Quick Brown Fox Jumps Over The Lazy Dog” &amp;ndash; 字体测试常用，包含所有英文字母&lt;/li&gt;
&lt;li&gt;技术挑战 1：Math of projections, curves, surfaces&lt;/li&gt;
&lt;li&gt;技术挑战 2：Physics of lighting and shading&lt;/li&gt;
&lt;li&gt;技术挑战 3：Representing / operating shapes in 3D&lt;/li&gt;
&lt;li&gt;技术挑战 4：Animation / simulation&lt;/li&gt;
&lt;li&gt;这门课不涉及3D图形软硬件编程（OpenGL，DX等）&lt;/li&gt;
&lt;li&gt;Computer Graphics is AWESOME！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;课程内容&#34;&gt;课程内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rasterization 光栅化
&lt;ul&gt;
&lt;li&gt;投影几何图元（geometry primitives）到屏幕上&lt;/li&gt;
&lt;li&gt;把图元拆分为片元（fragments）&lt;/li&gt;
&lt;li&gt;电子游戏的金标准（Real-time 应用）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Curves and meshes 曲线和网格（几何）
&lt;ul&gt;
&lt;li&gt;如何在计算机图形学中表示几何形体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ray tracing 光线追踪
&lt;ul&gt;
&lt;li&gt;从摄像机射出射线穿过每个像素
&lt;ul&gt;
&lt;li&gt;计算 intersection 和 shading&lt;/li&gt;
&lt;li&gt;continue to bounce 光线直到碰到光源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;电影/动画的金标准（Offline 应用）&lt;/li&gt;
&lt;li&gt;Trade off：效果和时间&lt;/li&gt;
&lt;li&gt;实时光线追踪&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Animation / Simulation 动画和模拟
&lt;ul&gt;
&lt;li&gt;Key frame animation&lt;/li&gt;
&lt;li&gt;Mass-spring system&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GAMES101 不包括：
&lt;ul&gt;
&lt;li&gt;Using OpenGL, DirectX, Vulkan
&lt;ul&gt;
&lt;li&gt;The syntax of Shaders&lt;/li&gt;
&lt;li&gt;Learn Graphics, not Graphics API&lt;/li&gt;
&lt;li&gt;学完课程有能力去自学&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3D Modeling（Maya, 3DS Max, Blender）和 VR/游戏开发（Unity，Unreal Engine）&lt;/li&gt;
&lt;li&gt;计算机视觉和深度学习&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;课程细节&#34;&gt;课程细节&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;主页上 Reading 材料课前阅读&lt;/li&gt;
&lt;li&gt;使用 IDE&lt;/li&gt;
&lt;li&gt;不发布作业代码和答案（Codes and Solutions），只进行讨论和解释（Discussion and Explanation）&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>A&#43;B Problem</title>
        <link>https://5rLku.github.io/article/aplusb-problem/</link>
        <pubDate>Mon, 24 May 2021 15:49:57 +0800</pubDate>
        
        <guid>https://5rLku.github.io/article/aplusb-problem/</guid>
        <description>&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;给定两个数 a 和 b，计算他们的和&lt;/p&gt;
&lt;h2 id=&#34;基本思路&#34;&gt;基本思路&lt;/h2&gt;
&lt;p&gt;读取 a 和 b，计算他们的和 $result$
$$result = a + b$$&lt;/p&gt;
&lt;h2 id=&#34;通过代码&#34;&gt;通过代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
